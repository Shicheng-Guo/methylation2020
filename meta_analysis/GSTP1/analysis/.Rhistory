350+899
1249*(1+0.08)
899.99+ 349.99
10/0.05
p=runif(0,1,100)
p
p=runif(100,0,1)
p
p=runif(100,0,0.3)
p
p*w/sum(w)
w=1:100
p*w/sum(w)
mhl=p*w/sum(w)
plot(mhl)
p=runif(100,0,0.3)
mhl=p*w/sum(w)
plot(mhl)
p=runif(100,0,0.3)
mhl=p*w/sum(w)
plot(mhl)
w=1:1000
p=runif(1000,0,0.3)
mhl=p*w/sum(w)
plot(mhl)
mhl=sum(p*w/sum(w))
mhl
seq(4,100,by=4)
mhl<-c()
for(i in seq(5,100,by=4)){
w=4:i
p=runif(length(w),0,0.3)
mhl1=sum(p*w/sum(w))
mhl<-c(mhl,mhl1)
}
mhl
plot(mhl)
mhl<-c()
for(i in seq(5,1000,by=4)){
w=4:i
p=runif(length(w),0,0.3)
mhl1=sum(p*w/sum(w))
mhl<-c(mhl,mhl1)
}
plot(mhl)
mhl<-c()
for(i in seq(5,10000,by=4)){
w=4:i
p=runif(length(w),0,0.3)
mhl1=sum(p*w/sum(w))
mhl<-c(mhl,mhl1)
}
plot(mhl)
mhl<-c()
for(i in seq(5,100,by=4)){
w=4:i
p=runif(length(w),0,0.3)
mhl1=sum(p*w/sum(w))
mhl<-c(mhl,mhl1)
}
plot(mhl)
mhl<-c()
for(i in seq(5,100,by=1)){
w=4:i
p=runif(length(w),0,0.3)
mhl1=sum(p*w/sum(w))
mhl<-c(mhl,mhl1)
}
plot(mhl)
plot(mhl,ylab="MHL")
plot(mhl,ylab="MHL",xlab="Number of Methylation Haplotypes")
plot(mhl,ylab="MHL",xlab="Number of Methylation Haplotypes",col="red")
plot(mhl,ylab="MHL",xlab="Number of Methylation Haplotypes",col="red",type="l")
plot(mhl,ylab="MHL",xlab="Number of Methylation Haplotypes",col="red",type="l",cex=3)
plot(mhl,ylab="MHL",xlab="Number of Methylation Haplotypes",col="red",type="l",lwd=3)
mhl<-c()
for(i in seq(5,10000,by=1)){
w=4:i
p=runif(length(w),0,0.3)
mhl1=sum(p*w/sum(w))
mhl<-c(mhl,mhl1)
}
plot(mhl,ylab="MHL",xlab="Number of Methylation Haplotypes",col="red",type="l",lwd=3)
mhl<-c()
for(i in seq(5,1000,by=1)){
w=4:i
p=runif(length(w),0,0.3)
mhl1=sum(p*w/sum(w))
mhl<-c(mhl,mhl1)
}
plot(mhl,ylab="MHL",xlab="Number of Methylation Haplotypes",col="red",type="l",lwd=3)
mhl<-c()
for(i in seq(5,1000,by=1)){
w=4:i
p=runif(length(w),0,0.3)
mhl1=sum(p*w/sum(w))
mhl<-c(mhl,mhl1)
}
plot(mhl,ylab="MHL",xlab="Number of Methylation Haplotypes",col="red",type="l",lwd=3)
mhl<-c()
for(i in seq(5,1000,by=1)){
w=4:i
p=runif(length(w),0,0.3)
mhl1=sum(p*w/sum(w))
mhl<-c(mhl,mhl1)
}
plot(mhl,ylab="MHL",xlab="Number of Methylation Haplotypes",col="red",type="l",lwd=3)
mhl<-c()
for(i in seq(5,1000,by=1)){
w=4:i
p=runif(length(w),0,0.3)
mhl1=sum(p*w)/sum(w))
mhl<-c(mhl,mhl1)
}
mhl<-c()
for(i in seq(5,1000,by=1)){
w=4:i
p=runif(length(w),0,0.3)
mhl1=sum(p*w)/sum(w)
mhl<-c(mhl,mhl1)
}
plot(mhl,ylab="MHL",xlab="Number of Methylation Haplotypes",col="red",type="l",lwd=3)
z<-x+y+r*x*y
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
r<-rnorm(1000,0,0.1)
z<-x+y+r*x*y
lm(z~x+y+x*y)
fit<-lm(z~x+y+x*y)
summary(fit)
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
z<-rnorm(1000,0,1)
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
z<-rnorm(1000,0,1)
fit<-lm(z~x+y+x*y)
summary(fit)
summary$Coefficients[4,4]
summary(fit)$Coefficients[4,4]
fit<-lm(z~x+y+x*y)
summary(fit)$Coefficients[4,4]
summary(fit)
summary(fit)$Coefficients
summary(fit)$coefficients[4,4]
for(i in 1:1000){
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
z<-rnorm(1000,0,1)
fit<-lm(z~x+y+x*y)
tmp<-summary(fit)$coefficients[4,4]
p<-c(tmp,p)
}
p
qqplotR<-function(p){
observed <- sort(p)
lobs <- -(log10(observed))
expected <- c(1:length(observed))
lexp <- -(log10(expected / (length(expected)+1)))
data.frame(lobs,lexp)
}
qqplotR(p)
plot(pp[,1],pp[,2])
pp<-qqplotR(p)
plot(pp[,1],pp[,2])
plot(c(0,20), c(0,20), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,20), ylim=c(0,20), las=1, xaxs="i", yaxs="i", bty="l")
pp1<-qqplotR(p)
plot(c(0,20), c(0,20), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,20), ylim=c(0,20), las=1, xaxs="i", yaxs="i", bty="l")
plot(pp[,1],pp[,2])
plot(c(0,20), c(0,20), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,20), ylim=c(0,20), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[1])   # PC3
points(pp2$lexp,pp2$lobs, pch=1, cex=.4, col=rainbow(7)[2])   # PC5
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,20), ylim=c(0,20), las=1, xaxs="i", yaxs="i", bty="l")
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[1])   # PC3
z<-rnorm(1000,0,1)
for(i in 1:1000){
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
fit<-lm(z~x+y+x*y)
tmp<-summary(fit)$coefficients[4,4]
p<-c(tmp,p)
}
pp1<-qqplotR(p)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[1])   # PC3
z<-rnorm(1000,0,1)
for(i in 1:1000){
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
fit<-lm(z~x+y+x*y)
tmp<-summary(fit)$coefficients[4,4]
p<-c(tmp,p)
}
pp1<-qqplotR(p)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[1])   # PC3
qqplotR<-function(p){
observed <- sort(p)
lobs <- -(log10(observed))
expected <- c(1:length(observed))
lexp <- -(log10(expected / (length(expected)+1)))
data.frame(lobs,lexp)
}
z<-rnorm(1000,0,1)
for(i in 1:1000){
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
fit<-lm(z~x+y+x*y)
tmp<-summary(fit)$coefficients[4,4]
p<-c(tmp,p)
}
pp1<-qqplotR(p)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[1])   # PC3
p1<-c()
p1<-c()
z<-rnorm(1000,0,1)
for(i in 1:1000){
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
fit<-lm(z~x+y+x*y)
tmp<-summary(fit)$coefficients[4,4]
p1<-c(tmp,p1)
}
p2<-c()
r<-rnorm(1000,0,0.1)
for(i in 1:1000){
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
z<-x+y+r*x*y
fit<-lm(z~x+y+x*y)
tmp<-summary(fit)$coefficients[4,4]
p2<-c(tmp,p2)
}
pp1<-qqplotR(p1)
pp2<-qqplotR(p2)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[1])   # PC3
points(pp2$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[2])   # PC3
points(pp2$lexp,pp2$lobs, pch=1, cex=.4, col=rainbow(7)[2])   # PC3
qqplotR<-function(p){
observed <- sort(p)
lobs <- -(log10(observed))
expected <- c(1:length(observed))
lexp <- -(log10(expected / (length(expected)+1)))
data.frame(lobs,lexp)
}
p1<-c()
z<-rnorm(1000,0,1)
for(i in 1:1000){
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
fit<-lm(z~x+y+x*y)
tmp<-summary(fit)$coefficients[4,4]
p1<-c(tmp,p1)
}
p2<-c()
r<-rnorm(1000,0,0.1)
for(i in 1:1000){
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
z<-x+y+r*x*y
fit<-lm(z~x+y+x*y)
tmp<-summary(fit)$coefficients[4,4]
p2<-c(tmp,p2)
}
pp1<-qqplotR(p1)
pp2<-qqplotR(p2)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[1])   # PC3
points(pp2$lexp,pp2$lobs, pch=1, cex=.4, col=rainbow(7)[2])   # PC3
pp3<-c(sample(p1,20))
pp3
a=0.1
pp3<-c(sample(p1,round((1-a)*length(p1))),sample(p1,round(a*length(p1))))
p3<-c(sample(p1,round((1-a)*length(p1))),sample(p1,round(a*length(p1))))
pp3<-qqplotR(p3)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[2])   # PC3
points(pp2$lexp,pp2$lobs, pch=1, cex=.4, col=rainbow(7)[3])   # PC3
points(pp2$lexp,pp2$lobs, pch=1, cex=.4, col=rainbow(7)[4])   # PC3
points(pp3$lexp,pp3$lobs, pch=1, cex=.4, col=rainbow(7)[4])   # PC3
a=0.5
p3<-c(sample(p1,round((1-a)*length(p1))),sample(p1,round(a*length(p1))))
pp3<-qqplotR(p3)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp3$lexp,pp3$lobs, pch=1, cex=.4, col=rainbow(7)[4])   # PC3
a=0.8
p3<-c(sample(p1,round((1-a)*length(p1))),sample(p1,round(a*length(p1))))
pp3<-qqplotR(p3)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp3$lexp,pp3$lobs, pch=1, cex=.4, col=rainbow(7)[4])   # PC3
a=0.9
p3<-c(sample(p1,round((1-a)*length(p1))),sample(p1,round(a*length(p1))))
pp3<-qqplotR(p3)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[2])   # PC3
points(pp2$lexp,pp2$lobs, pch=1, cex=.4, col=rainbow(7)[3])   # PC3
points(pp3$lexp,pp3$lobs, pch=1, cex=.4, col=rainbow(7)[4])   # PC3
a=0.9
p3<-c(sample(p1,round((1-a)*length(p1))),sample(p2,round(a*length(p1))))
pp3<-qqplotR(p3)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp3$lexp,pp3$lobs, pch=1, cex=.4, col=rainbow(7)[4])   # PC3
a=0.2
p3<-c(sample(p1,round((1-a)*length(p1))),sample(p2,round(a*length(p1))))
pp3<-qqplotR(p3)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[2])   # PC3
points(pp2$lexp,pp2$lobs, pch=1, cex=.4, col=rainbow(7)[3])   # PC3
points(pp3$lexp,pp3$lobs, pch=1, cex=.4, col=rainbow(7)[4])   # PC3
a=0.3
p3<-c(sample(p1,round((1-a)*length(p1))),sample(p2,round(a*length(p1))))
pp3<-qqplotR(p3)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[2])   # PC3
points(pp2$lexp,pp2$lobs, pch=1, cex=.4, col=rainbow(7)[3])   # PC3
points(pp3$lexp,pp3$lobs, pch=1, cex=.4, col=rainbow(7)[4])   # PC3
a=0.5
p3<-c(sample(p1,round((1-a)*length(p1))),sample(p2,round(a*length(p1))))
pp3<-qqplotR(p3)
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[2])   # PC3
points(pp2$lexp,pp2$lobs, pch=1, cex=.4, col=rainbow(7)[3])   # PC3
points(pp3$lexp,pp3$lobs, pch=1, cex=.4, col=rainbow(7)[4])   # PC3
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[1])   # PC3
a=0.5
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
for(i in 1:4){
a<-seq(0.1,0.9,by=0.2)[i]
p<-c(sample(p1,round((1-a)*length(p1))),sample(p2,round(a*length(p1))))
pp1<-qqplotR(p)
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[i+1])   # PC3
}
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
for(i in 1:4){
a<-seq(0,0.9,by=0.2)[i]
p<-c(sample(p1,round((1-a)*length(p1))),sample(p2,round(a*length(p1))))
pp1<-qqplotR(p)
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[i+1])   # PC3
}
a=0.5
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
for(i in 1:4){
a<-seq(0,0.5,by=0.1)[i]
p<-c(sample(p1,round((1-a)*length(p1))),sample(p2,round(a*length(p1))))
pp1<-qqplotR(p)
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[i+1])   # PC3
legend("bottomright",legend=paste("Postive%=",c(0%,20),sep=""),pch=1,col=c(rainbow(7)[1],rainbow(7)[2],rainbow(7)[4],rainbow(7)[6],rainbow(7)[7]),bty="n")
}
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
for(i in 1:4){
a<-seq(0,0.5,by=0.1)[i]
p<-c(sample(p1,round((1-a)*length(p1))),sample(p2,round(a*length(p1))))
pp1<-qqplotR(p)
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[i+1])   # PC3
}
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
for(i in 1:4){
pt<-seq(0,0.5,by=0.1)
a<-pt[i]
p<-c(sample(p1,round((1-a)*length(p1))),sample(p2,round(a*length(p1))))
pp1<-qqplotR(p)
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[i+1])   # PC3
legend("bottomright",legend=paste("Postive%=",pt,sep=""),pch=1,col=c(rainbow(7)[2:(length(pt)+1)]),bty="n")
}
legend("bottomright",legend=paste("Postive%=",pt,sep=""),pch=1,col=c(rainbow(7)[2:(length(pt)+1)]),bty="n")
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
pt<-seq(0,0.5,by=0.1)
for(i in 1:length(pt)){
a<-pt[i]
p<-c(sample(p1,round((1-a)*length(p1))),sample(p2,round(a*length(p1))))
pp1<-qqplotR(p)
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[i+1])   # PC3
legend("bottomright",legend=paste("Postive%=",pt,sep=""),pch=1,col=c(rainbow(7)[2:(length(pt)+1)]),bty="n")
}
plot(c(0,5), c(0,5), col="red", lwd=3, type="l", xlab="Expected (-logP)", ylab="Observed (-logP)", xlim=c(0,5), ylim=c(0,5), las=1, xaxs="i", yaxs="i", bty="l")
pt<-seq(0,0.2,by=0.05)
for(i in 1:length(pt)){
a<-pt[i]
p<-c(sample(p1,round((1-a)*length(p1))),sample(p2,round(a*length(p1))))
pp1<-qqplotR(p)
points(pp1$lexp,pp1$lobs, pch=1, cex=.4, col=rainbow(7)[i+1])   # PC3
legend("bottomright",legend=paste("Postive%=",pt,sep=""),pch=1,col=c(rainbow(7)[2:(length(pt)+1)]),bty="n")
}
p1<-c()
z<-rnorm(1000,0,1)
for(i in 1:1000000){
x<-rnorm(1000,0,1)
y<-rnorm(1000,0,1)
fit<-lm(z~x+y+x*y)
tmp<-summary(fit)$coefficients[4,4]
p1<-c(tmp,p1)
}
zork<- rnorm( 200)
id<- sample( 1:8, 200, replace=TRUE)
zork
stats( zork, by=id)
x <- matrix(runif(100), ncol=5)
group <- sample(1:8, 20, TRUE)
x
group
(xsum <- rowsum(x, group))
table(apply(xmean90,2,function(x) which.max(x)))
z<-rnorm(100,4,5)
p<-pnorm(z)
p
p<-pnorm(1)
p
p<-pnorm(-4)
p
h1<-read.table("N37_WB_WGBS_RRBS_dRRBS_merged__mld_blocks_stringent_mhl_matrix.txt",sep="\t",head=T,as.is=F)
rlt4<-subset(rlt2,P<0.05/nrow(rlt2)) # 2
162.68
162.68/2
setwd("/home/sguo/Dropbox/Project/methylation/meta/GSTP1/analysis")
library("meta")
library("metafor")
library("mada")
apc<-read.table("GSTP1.txt",head=T,sep="\t")
apc<-read.table("GSTP1.txt",head=T,sep="\t",as.is=T)
head(apc)
gstp1<-read.table("GSTP1.txt",head=T,sep="\t",as.is=T)
head(apc)
head(gstp1)
meta1 <- metabin(event.e, n.e, event.c, n.c,data=gstp1,studlab=author,sm="OR", method="I",method.tau="DL")
meta1
pdf("Figure1.forest.pdf")
forest.meta(meta1,fontsize=6,leftlabs=c(NA, "Methylated", NA, "Methylated", NA),lab.e="NSCLC",lab.c="Normal",rightcols=c("effect","ci","w.random"),comb.random=TRUE,comb.fixed=TRUE,cex=0.4)
dev.off()
pdf("Figure2.cum_year.pdf")
cum<-metacum(meta1,sortvar=apc$year,pooled="random")
forest.meta(cum,fontsize=6)
dev.off()
# 3, trim fill plot
tf1<-trimfill(meta1,comb.fixed=T)
tf1
pdf("Figure3.trimfill.pdf")
forest.meta(tf1,fontsize=6,comb.fixed=TRUE)  #
dev.off()
# 4, funnel plot
pdf("Figure4.funnel.pdf")
funnel.meta(meta1,log="x")
dev.off()
# 5, labbe plot
pdf("Figure5.labbe.pdf")
labbe(meta1,studlab=apc$author,cex.studlab=0.4,xlim=c(-0.2,1))
dev.off()
# 6, Egger test and Harbord test
metabias(meta1,method.bias="linreg") # Egger test for non odds ratio effect
metabias(meta1,method.bias="score") # Harbord test for odds ratio effect
pdf("Figure6.leave-one-meta.pdf")
forest(metainf(meta1, pooled="random"), comb.random=TRUE,fond=4)
# forest(metainf(meta1, pooled="fixed"), comb.random=TRUE,fond=4) #
dev.off()
# 8, combined sensitivity and specificty and SROC
TP<-apc$event.e
FN<-apc$n.e-apc$event.e
FP<-apc$event.c
TN<-apc$n.c-apc$event.c
data<-data.frame(TP,FN,FP,TN)
fit.roc<-reitsma(data)
summary(fit.roc)    # extract combined Sen and Spe from Here
tissue<-data[apc$sampletype=="Tissue",]
serum<-data[apc$sampletype=="Non-tissue",]
fit.tissue<-reitsma(tissue)
fit.serum<-reitsma(serum)
summary(fit.tissue)
summary(fit.serum)
pdf("SROC2.pdf")
plot(fit.roc, xlim = c(0,0.7), ylim = c(0,0.75),main = "Diagnostic SROC(bivariate model) for FHIT in NSCLC",cex.main=1,cex.lab=1,cex.axis=1,lwd=4,lty=1)
lines(sroc(fit.roc), lty = 2,lwd=4)
ROCellipse(fit.roc, lty = 2, pch = 2, d = TRUE)
points(fpr(data), sens(data), cex = 1,pch=2,lwd=4)
legend("bottomright", c("Observed data in NSCLC","SROC for NSCLC", "95%CI for NSCLC"), pch = c(2,NA,NA), lty = c(NA,2,1),cex=1.1,lwd=4)
dev.off()
